{"version":3,"sources":["Components/MovieCard.js","Containers/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","movie","console","log","Title","MovieList","useState","movies","setMovies","search","setSearch","fetchMovies","fetch","process","then","res","json","Response","Search","useEffect","className","autofocus","value","onChange","newValue","onRequestSearch","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAYeA,EAVG,SAACC,GACf,IAAMC,EAAQD,EAAMC,MACpB,OACI,gCACKC,QAAQC,IAAIF,EAAMG,OACnB,6BAAKH,EAAMG,Y,iBCkCRC,EArCG,WAAO,IAAD,EACQC,mBAAS,MADjB,mBACbC,EADa,KACLC,EADK,OAEQF,mBAAS,IAFjB,mBAEbG,EAFa,KAELC,EAFK,KAIdC,EAAc,SAACF,GAEjBG,MAAM,8BAAD,OAA+BH,EAA/B,8BAA2DI,aAC/DC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACmB,UAAlBA,EAAKC,SACJf,QAAQC,IAAIa,EAAKC,WAEjBT,EAAUQ,EAAKE,QACfR,EAAU,SAStB,OAJAS,qBAAU,WACNR,EAAYF,KACb,IAGC,gCACI,qBAAKW,UAAU,YAAf,SACI,cAAC,IAAD,CACIC,WAAS,EACTC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAcd,EAAUc,IAClCC,gBAAiB,WAAOd,EAAYF,QAGhC,OAAXF,EAAkBA,EAAOmB,KAAI,SAAAzB,GAAK,OAAI,cAAC,EAAD,CAAWA,MAAOA,OAAa,+FCtBnE0B,MAXf,WAGE,OACE,gCACE,oBAAIP,UAAU,QAAd,0BACA,cAAC,EAAD,QCGSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.cb7b969c.chunk.js","sourcesContent":["import React from 'react'\n\nconst MovieCard = (props) => {\n    const movie = props.movie\n    return (\n        <div>\n            {console.log(movie.Title)}\n            <h1>{movie.Title}</h1>\n        </div>\n    )\n}\n\nexport default MovieCard","import React, {useState, useEffect} from 'react'\nimport MovieCard from '../Components/MovieCard'\nimport SearchBar from \"material-ui-search-bar\";\n\nconst MovieList = () => {\n    const [movies, setMovies] = useState(null)\n    const [search, setSearch] = useState('')\n\n    const fetchMovies = (search) => {\n\n        fetch(`https://www.omdbapi.com/?s=${search}&type=movie&apikey=${process.env.REACT_APP_MY_KEY}`)\n        .then(res => res.json())\n        .then(json => {\n            if(json.Response === 'False'){\n                console.log(json.Response)\n            } else {\n                setMovies(json.Search)\n                setSearch('')\n            }\n        })\n    }\n\n    useEffect(() => {\n        fetchMovies(search)\n    }, [])\n\n    return (\n        <div>\n            <div className=\"searchbar\">\n                <SearchBar\n                    autofocus\n                    value={search}\n                    onChange={(newValue) => setSearch(newValue)}\n                    onRequestSearch={() => {fetchMovies(search)}}\n                />\n            </div>\n            {movies !== null ? movies.map(movie => <MovieCard movie={movie} />) : <h1>Type in the search bar and nominate your favorite movies!</h1>}\n        </div>\n    )\n}\n\nexport default MovieList","import './App.css';\nimport MovieList from './Containers/MovieList'\n\nfunction App() {\n\n  \n  return (\n    <div>\n      <h1 className=\"title\">The Shoppies</h1>\n      <MovieList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}