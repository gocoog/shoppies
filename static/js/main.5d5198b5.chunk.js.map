{"version":3,"sources":["Components/MovieCard.js","Containers/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","maxHeight","margin","MovieCard","props","classes","movie","className","console","log","Title","Card","CardMedia","component","alt","image","Poster","title","CardContent","Typography","gutterBottom","variant","color","Year","CardActions","Button","size","MovieList","useState","movies","setMovies","search","setSearch","fetchMovies","fetch","process","then","res","json","Response","Search","useEffect","autofocus","value","onChange","newValue","onRequestSearch","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PASMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,UAAW,OACXC,OAAQ,UAoCDC,EAhCG,SAACC,GACf,IAAMC,EAAUR,IACVS,EAAQF,EAAME,MAEpB,OACI,sBAAKC,UAAU,YAAf,UACKC,QAAQC,IAAIH,EAAMI,OACnB,eAACC,EAAA,EAAD,CAAMJ,UAAWF,EAAQN,KAAzB,UACI,cAACa,EAAA,EAAD,CACIC,UAAU,MACVC,IAAKR,EAAMI,MACXK,MAAOT,EAAMU,OACbC,MAAOX,EAAMI,QAEjB,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,KAAhD,SACKP,EAAMI,QAEX,cAACS,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,IAA5D,SACKP,EAAMiB,UAGf,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQJ,MAAM,UAA3B,+B,iBCOLK,EA3CG,WAAO,IAAD,EACQC,mBAAS,MADjB,mBACbC,EADa,KACLC,EADK,OAEQF,mBAAS,IAFjB,mBAEbG,EAFa,KAELC,EAFK,KAIdC,EAAc,SAACF,GAEjBG,MAAM,8BAAD,OAA+BH,EAA/B,8BAA2DI,aAC/DC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACmB,UAAlBA,EAAKC,SACJ/B,QAAQC,IAAI6B,EAAKC,WAEjBT,EAAUQ,EAAKE,QACfR,EAAU,SAStB,OAJAS,qBAAU,WACNR,EAAYF,KACb,IAGC,gCACI,qBAAKxB,UAAU,YAAf,SACI,cAAC,IAAD,CACImC,WAAS,EACTC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAcb,EAAUa,IAClCC,gBAAiB,WAAOb,EAAYF,QAG5C,qBAAKxB,UAAU,iBAAf,SACgB,OAAXsB,EAAkBA,EAAOkB,KAAI,SAAAzC,GAAK,OAC/B,cAAC,EAAD,CAAWA,MAAOA,OAElB,iGC1BL0C,MAXf,WAGE,OACE,gCACE,oBAAIzC,UAAU,QAAd,0BACA,cAAC,EAAD,QCGS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.5d5198b5.chunk.js","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 250,\n        maxHeight: \"auto\",\n        margin: '30px',\n    },\n  });\n\nconst MovieCard = (props) => {\n    const classes = useStyles()\n    const movie = props.movie\n\n    return (\n        <div className=\"flex-card\" >\n            {console.log(movie.Title)}\n            <Card className={classes.root}>\n                <CardMedia\n                    component=\"img\"\n                    alt={movie.Title}\n                    image={movie.Poster}\n                    title={movie.Title}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {movie.Title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {movie.Year}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                    Nominate\n                    </Button>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\n\nexport default MovieCard","import React, {useState, useEffect} from 'react'\nimport MovieCard from '../Components/MovieCard'\nimport SearchBar from \"material-ui-search-bar\";\n\nconst MovieList = () => {\n    const [movies, setMovies] = useState(null)\n    const [search, setSearch] = useState('')\n\n    const fetchMovies = (search) => {\n\n        fetch(`https://www.omdbapi.com/?s=${search}&type=movie&apikey=${process.env.REACT_APP_MY_KEY}`)\n        .then(res => res.json())\n        .then(json => {\n            if(json.Response === 'False'){\n                console.log(json.Response)\n            } else {\n                setMovies(json.Search)\n                setSearch('')\n            }\n        })\n    }\n\n    useEffect(() => {\n        fetchMovies(search)\n    }, [])\n\n    return (\n        <div>\n            <div className=\"searchbar\">\n                <SearchBar\n                    autofocus\n                    value={search}\n                    onChange={(newValue) => setSearch(newValue)}\n                    onRequestSearch={() => {fetchMovies(search)}}\n                />\n            </div>\n            <div className=\"flex-container\">\n                {movies !== null ? movies.map(movie =>\n                    <MovieCard movie={movie} />) \n                    : \n                    <h1>Type in the search bar and nominate your favorite movies!</h1>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MovieList","import './App.css';\nimport MovieList from './Containers/MovieList'\n\nfunction App() {\n\n  \n  return (\n    <div>\n      <h1 className=\"title\">The Shoppies</h1>\n      <MovieList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}